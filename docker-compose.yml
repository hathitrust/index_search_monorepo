x-condition-healthy: &healthy
  condition: service_healthy

x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  start_period: 30s
  retries: 5

# Common environment variables for all services
x-env-common: &env_common
    SOLR_USER: admin
    SOLR_PASSWORD: solrRocks
    POETRY_VERSION: 1.5.1
    ENV: dev

# Environment variables specific to the indexer services
x-env-indexer: &env_indexer
    QUEUE_HOST: rabbitmq
    QUEUE_PASS: guest
    QUEUE_USER: guest
    MYSQL_HOST: mysql-sdr
    MYSQL_USER: mdp-admin
    MYSQL_PASS: mdp-admin
    SDR_DIR: /sdr1/obj
    MYSQL_DATABASE: ht
    MYSQL_RANDOM_ROOT_PASSWORD: 1

services:
  ht_indexer_tracker:
    container_name: ht_indexer_tracker
    profiles: [ indexer,indexer_tests ]
    image: ht_indexer
    environment:
      << : [*env_common, *env_indexer]
      SOLR_URL: http://solr-sdr-catalog:9033/solr/catalog/
    depends_on:
      solr-sdr-catalog: *healthy
      mysql-sdr: *healthy
    tty: true
    stdin_open: true
  document_retriever:
    container_name: document_retriever
    profiles: [ indexer,indexer_tests ]
    image: ht_indexer
    volumes:
      - ../tmp:/tmp
      - ./app/ht_indexer:/app
      - ../sdr1/obj:/sdr1/obj
    ports:
      - "8081:8081"
    environment:
      << : [*env_common, *env_indexer]
      SOLR_URL: http://solr-sdr-catalog:9033/solr/catalog/
      QUEUE_NAME: retriever_queue
    depends_on:
      solr-sdr-catalog: *healthy
      rabbitmq: *healthy
      mysql-sdr: *healthy
    tty: true
    stdin_open: true
    command: [ "python", "src/document_retriever_service/full_text_search_retriever_service.py", "--query_field", "item" ]
  mysql-sdr:
    image: ghcr.io/hathitrust/db-image
    profiles: [ indexer, indexer_tests ]
    volumes:
      - mysql_sdr_data:/var/lib/mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      <<: *env_indexer
    healthcheck:
      <<: *healthcheck-defaults
      test:
        [ "CMD", "healthcheck.sh", "--su-mysql", "--connect" ]
      timeout: 30s
      retries: 3
  solr-lss-dev:
    image: ghcr.io/hathitrust/full-text-search-cloud:shards-docker
    profiles: [ indexer, indexer_tests, solr_query, solr_query_tests ]
    container_name: solr-lss-dev
    ports:
      - "8983:8983"
    environment:
      <<: *env_common
      ZK_HOST: zoo1:2181
      SOLR_OPTS: -XX:-UseLargePages
    depends_on:
      zoo1: *healthy
    volumes:
      - solr1_data:/var/solr/data
    # start solr in the background, wait for it to start, then create the collection
    command: [ "sh", "-c", 'solr-foreground -c & sleep 150 && export SOLR_AUTHENTICATION_OPTS=-Dbasicauth=admin:solrRocks && solr create_collection -d /opt/solr/core-x -c core-x -shards 1 -replicationFactor 1 -p 8983 && wait' ]
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD-SHELL", "curl -s -u admin:solrRocks 'http://localhost:8983/solr/admin/collections?action=CLUSTERSTATUS&collection=core-x' | grep -q '\"state\":\"active\"'" ]
      timeout: 30s
      retries: 10
  zoo1:
    image: zookeeper:3.8.0
    profiles: [ indexer, indexer_tests, solr_query, solr_query_tests ]
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
      - 7001:7000
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - zoo1_data:/data
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
  solr-sdr-catalog:
    container_name: solr-sdr-catalog
    profiles: [ indexer, indexer_tests ]
    image: ghcr.io/hathitrust/catalog-solr-sample
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "/usr/bin/curl", "-s", "-f", "http://localhost:9033/solr/catalog/admin/ping" ]
      interval: 5s
    ports:
      - "9033:9033"
    expose:
      - 9033
  document_generator:
    container_name: document_generator
    profiles: [ indexer, indexer_tests ]
    image: ht_indexer
    volumes:
      - ../tmp:/tmp:rm
      - ../sdr1/obj:/sdr1/obj
      - ./app/ht_indexer:/app
    depends_on:
      rabbitmq: *healthy
      mysql-sdr: *healthy
    tty: true
    stdin_open: true
    environment:
      <<: *env_indexer
      SRC_QUEUE_HOST: rabbitmq
      SRC_QUEUE_NAME: retriever_queue
      SRC_QUEUE_PASS: guest
      SRC_QUEUE_USER: guest
      TGT_QUEUE_HOST: rabbitmq
      TGT_QUEUE_NAME: indexer_queue
      TGT_QUEUE_PASS: guest
      TGT_QUEUE_USER: guest
    command: [ "python", "src/document_generator/document_generator_service.py" ]
  document_indexer:
    container_name: document_indexer
    profiles: [ indexer, indexer_tests ]
    image: ht_indexer
    volumes:
      - ../tmp:/tmp:rm
      - ../sdr1/obj:/sdr1/obj
      - ./app/ht_indexer:/app
    ports:
      - "8082:8082"
    depends_on:
      solr-lss-dev: *healthy
      rabbitmq: *healthy
    tty: true
    stdin_open: true
    environment:
      << : [*env_common, *env_indexer]
      QUEUE_NAME: indexer_queue
    command: [ "python", "src/document_indexer_service/document_indexer_service.py", "--solr_indexing_api", "http://solr-lss-dev:8983/solr/#/core-x/", "--batch_size", "100" ]
  rabbitmq:
    container_name: rabbitmq
    profiles: [ indexer, indexer_tests ]
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
  all_tests:
    container_name: all_tests
    image: ht_indexer
    profiles: [ indexer_tests ]
    volumes:
      - ./app/ht_indexer:/app
      - ./app/ht_indexer/tests:/tests
      - ../tmp:/tmp
      - ../sdr1/obj:/sdr1/obj
    command: [ "python", "-m", "pytest", "tests"]
    environment:
      <<: *env_indexer
      SOLR_URL: http://solr-sdr-catalog:9033/solr/catalog/
    depends_on:
      solr-sdr-catalog: *healthy
      solr-lss-dev: *healthy
      rabbitmq: *healthy
      mysql-sdr: *healthy
      document_generator: *healthy
      document_indexer: *healthy
      document_retriever: *healthy
  ###############################SolrQueryInterface###############################
  solr_query_api:
    image: solr_query
    container_name: full_text_search_api
    profiles: [ solr_query ]
    stdin_open: true
    depends_on:
      solr-lss-dev: *healthy
    tty: true
    ports:
      - "8000:8000"
    environment:
      <<: *env_common
    command: [ "python", "src/ht_full_text_search/main.py", "--env",  "dev"]
  data_loader: # It is probably for this application I should create the image first
    image: solr_query
    container_name: data_loader
    profiles: [ solr_query, solr_query_tests ]
    stdin_open: true
    tty: true
    environment:
      <<: *env_common
    depends_on:
      solr-lss-dev: *healthy
    entrypoint: ["/bin/sh", "-c" ,"src/indexing_data.sh http://solr-lss-dev:8983 src/solr_dataset core-x" ]
  ht_search_tests:
    container_name: ht_search_tests
    image: solr_query
    profiles: [ solr_query_tests ]
    environment: *env_common
    command: [ "python", "-m", "pytest"]
    depends_on:
      solr-lss-dev: *healthy
      data_loader:
        condition: service_completed_successfully
volumes:
  mysql_sdr_data:
  solr1_data: null
  zoo1_data: null
  mysql_retriever_data:

