[virtualenvs]
in-project = true

[tool.pytest.ini_options]
minversion = "6.0"
# -p no:cacheprovider is to avoid pytest warning about pytest_cache fixture
# -ra is to show  extra test summary info; -q is to suppress pytest header
addopts = "-ra -q -p no:cacheprovider"

[tool.poetry]
name = "index_search_monorepo"
version = "0.1.0"
description = "Indexing and Searching documents in Solr"
authors = ["lisepul <lisepul@umich.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
pytest = "^8.0.2"
pytest-mock = "^3.10.0"

[build-system]
requires = ["poetry-core>=2.1.1"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Target Python version
target-version = "py311"

# Max line length to match Black
line-length = 100

# Enable specific rule sets (Ruff supports codes from tools like flake8, isort, etc.)
lint.select = [
  "E",  # pycodestyle (errors)
  "F",  # pyflakes
  "I",  # isort
  "B",  # bugbear
  "UP",  # pyupgrade
  "N",  # pep8-naming
]

# Optionally ignore specific rules
lint.ignore = ["E501"]  # E501: line too long (skip this if you trust Black for formatting)

# Exclude common directories
exclude = ["build", "dist", ".venv", ".git", "__pycache__"]

# Autofix issues when possible
fix = true


